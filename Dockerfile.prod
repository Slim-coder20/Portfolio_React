# --------------------
# ÉTAPE 1 : BUILDER (Compilation du projet)
# --------------------
# Utilise une image Node pour installer les dépendances et compiler le projet
FROM node:22-alpine AS builder

# Définir le répertoire de travail
WORKDIR /app

# Copie des fichiers de dépendances pour tirer profit du cache de Docker
COPY package.json package-lock.json ./

# Installation des dépendances
# L'option --only=production permet d'éviter d'installer les dépendances de dev
RUN npm install --only=production

# Copie du reste du code source
COPY . .

# Lancement de la construction (build) du projet
# Le résultat sera dans le dossier 'dist' (par défaut pour Vite)
RUN npm run build


# --------------------
# ÉTAPE 2 : RUNNER (Serveur Nginx léger)
# --------------------
# Utilise l'image Nginx, qui est très légère et performante
FROM nginx:alpine

# 1. Copier les fichiers statiques (le dossier 'dist') depuis l'étape 'builder'
# Vers le répertoire de service par défaut de Nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# 2. Copier le fichier de configuration Nginx créé juste avant
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 3. Exposer le port standard pour l'accès web
EXPOSE 80

# La commande de démarrage de Nginx est implicite dans l'image de base.